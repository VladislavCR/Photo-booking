# Generated by Django 4.2.4 on 2023-08-14 10:41

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phone_field.models
import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=200, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=200, verbose_name='Фамилия')),
                ('username', models.CharField(max_length=150, unique=True, validators=[users.validators.CorrectUsernameAndNotMe], verbose_name='username')),
                ('profile_photo', models.ImageField(blank=True, upload_to='users/profile', verbose_name='Фото профиля')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[users.validators.CorrectEmail], verbose_name='Почта')),
                ('phone', phone_field.models.PhoneField(help_text='Телефон для контакта', max_length=31, unique=True, verbose_name='Номер телефона')),
                ('work_experience', models.FloatField(default=0, verbose_name='Опыт работы')),
                ('city', models.CharField(help_text='Укажите город проживания', max_length=200, verbose_name='Город')),
                ('raiting', models.IntegerField(blank=True, null=True, verbose_name='Рейтинг профиля')),
                ('about_me', models.CharField(max_length=4000, verbose_name='Обо мне')),
                ('is_photographer', models.BooleanField(default=False, verbose_name='Роль. Фотограф')),
                ('is_video_operator', models.BooleanField(default=False, verbose_name='Роль. Видео оператор')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='День рождения')),
                ('social', models.CharField(blank=True, max_length=200, null=True, verbose_name='Социальные сети')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'ordering': ('email',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_service', models.CharField(max_length=200, verbose_name='Название услуги')),
                ('image_service', models.ImageField(blank=True, upload_to='users/tags', verbose_name='Фотография услуги')),
                ('cost_service', models.PositiveIntegerField(verbose_name='Стоимость услуги')),
                ('description_service', models.CharField(max_length=200, verbose_name='Описание услуги')),
                ('due_date', models.DateTimeField(verbose_name='Срок выполнения')),
                ('equipment', models.CharField(max_length=200, verbose_name='Оборудование')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название недвижимости')),
                ('adress', models.CharField(max_length=200, verbose_name='Адрес')),
                ('worktime', models.TextField(verbose_name='Время работы')),
                ('property_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='properties', to=settings.AUTH_USER_MODEL, verbose_name='Номер недвижимости')),
            ],
            options={
                'verbose_name': 'Недвижимость',
                'verbose_name_plural': 'Недвижимость',
            },
        ),
        migrations.CreateModel(
            name='Feedback_property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('raiting', models.IntegerField(blank=True, verbose_name='Рейтинг предприятия')),
                ('descriptions', models.CharField(max_length=4000, verbose_name='Текст обратной связи')),
                ('feedback_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_properties', to='users.property', verbose_name='Название недвижимости')),
                ('user_client_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_properties', to=settings.AUTH_USER_MODEL, verbose_name='ФИО клиента')),
            ],
            options={
                'verbose_name': 'Обратная связь',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='tag_id',
            field=models.ManyToManyField(related_name='users', to='users.tag', verbose_name='Теги'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
